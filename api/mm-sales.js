// api/mm-sales.js
// /api/mm-sales?code=PC00063&from=2025-01&to=2025-09
const BASE = process.env.VITE_MM_BASE_PUBLIC || "https://pinnacle.managermas.cl/api";
const TOKEN = (process.env.MANAGERMAS_TOKEN || "").replace(/\s+/g, "").trim();
const DOCUMENTS_PATH = "/documentos";

function yearMonthRange(fromYM, toYM){const[fy,fm]=fromYM.split("-").map(Number);const[ty,tm]=toYM.split("-").map(Number);const out=[];let y=fy,m=fm;while(y<ty||(y===ty&&m<=tm)){out.push(`${y}-${String(m).padStart(2,"0")}`);m+=1;if(m>12){m=1;y+=1}}return out}
function monthStartEnd(ym){const[y,m]=ym.split("-").map(Number);const start=`${y}-${String(m).padStart(2,"0")}-01`;const lastDay=new Date(y,m,0).getDate();const end=`${y}-${String(m).padStart(2,"0")}-${String(lastDay).padStart(2,"0")}`;return{start,end}}
function buildDocsUrl({base,from,to,code}){const u=new URL((base.replace(/\/+$/,""))+DOCUMENTS_PATH);u.searchParams.set("modulo","ventas");u.searchParams.set("con_detalle","1");u.searchParams.set("estado","emitido");u.searchParams.set("fecha_desde",from);u.searchParams.set("fecha_hasta",to);u.searchParams.set("cod_prod",code);return u.toString()}
async function fetchJson(url,scheme){const headers={"Accept":"application/json"};if(TOKEN)headers.Authorization=`${scheme} ${TOKEN}`;const r=await fetch(url,{headers});const text=await r.text();let json=null;try{json=JSON.parse(text)}catch{}return{ok:r.ok,status:r.status,json,text}}
async function fetchDocs(url){let a=await fetchJson(url,"Token");if(a.status===401)a=await fetchJson(url,"Bearer");return a}
function docSign(t){if(Number(t)===61)return-1; if([33,34,39,56].includes(Number(t)))return+1; return 0}
function get(o,keys,f){for(const k of keys){if(o&&Object.prototype.hasOwnProperty.call(o,k))return o[k]}return f}
function aggregateMonth(json, code){const data=get(json,["data","items","rows","result"],[]);let acc=0;for(const doc of(Array.isArray(data)?data:[])){const signo=docSign(get(doc,["tipo_dte","tipoDte","tipo"],0));if(!signo)continue;const det=get(doc,["detalle","detalles","items","lineas"],[]);for(const it of(Array.isArray(det)?det:[])){const cod=String(get(it,["cod_prod","codigo","sku","producto_codigo","presentation_code"],"")).trim();if(!cod||cod!==code)continue;acc+=signo*Number(get(it,["cantidad","qty","unidades","units"],0)||0)}}return acc}
module.exports=async(req,res)=>{res.setHeader("Access-Control-Allow-Origin","*");res.setHeader("Access-Control-Allow-Methods","GET, OPTIONS");res.setHeader("Access-Control-Allow-Headers","Content-Type");if(req.method==="OPTIONS")return res.status(200).end();if(req.method!=="GET")return res.status(405).json({ok:false,error:"Use GET"});const inputCode=String(req.query?.code||req.query?.presentation_code||"").trim();const fromYm=String(req.query?.from||"").trim();const toYm=String(req.query?.to||"").trim();const debug=String(req.query?.debug||"").trim()==="1";if(!inputCode)return res.status(400).json({ok:false,error:"Falta ?presentation_code=PC00063 (o ?code=...)"});
const now=new Date();const defTo=`${now.getFullYear()}-${String(now.getMonth()+1).padStart(2,"0")}`;const d=new Date(now.getFullYear(),now.getMonth()-11,1);const defFrom=`${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,"0")}`;const from=fromYm||defFrom;const to=toYm||defTo;
try{const series=[];for(const ym of yearMonthRange(from,to)){const{start,end}=monthStartEnd(ym);const url=buildDocsUrl({base:BASE,from:start,to:end,code:inputCode});const r=await fetchDocs(url);if(!r.ok){series.push([ym,0]);if(debug)series[series.length-1].push({status:r.status,raw:r.text?.slice(0,200)});continue}const units=aggregateMonth(r.json||{},inputCode);series.push([ym,units])}
const payload={ok:true,presentation_code:inputCode,from,to,series};return res.status(200).json(debug?{...payload,base:BASE,path:DOCUMENTS_PATH}:payload)}catch(e){return res.status(502).json({ok:false,error:String(e?.message||e)})}}
